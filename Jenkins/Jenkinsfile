pipeline{
    agent any
    environment{
        DATABASE_URI = credentials("DATABASE_URI")
        AUTHOR
    }
    stages{
        stage("Testing"){
            steps{
                // write tests for each service
                sh "bash Jenkins/test_script.sh"
                // pytest on each service
            }
        }
        stage("Build & Push"){
            steps{
                // install docker and docker-compose
                // add jenkins to docker group
                // sudo su - jenkins, docker login
                // docker-compose build and push
                sh "bash build_push.sh"
            }
        }
        // stage("Config Management (ansible)"){
        //     steps{
        //         // write out playbook, inventory
        //         // with roles
        //         // ssh keys generated from jenkins machine for jenkins user (ssh-keygen)
        //         // sudo su - jenkins, install ansible on this machine for jenkins
        //         // jenkins runs playbook
        //         sh "cd ansible && /home/Islam/.local/bin/ansible-playbook -i inventory playbook.yaml"
        //     }
        // }
        // stage("Deploy"){
        //     steps{
        //         // copy docker-compose.yaml over ssh (scp command)
        //         // set env variables on swarm manager
        //         // ssh into swarm manager to deploy the stack
        //         sh "echo 'skip'" 
        //     }
        //}
    }
    post{
        always{
            junit "**/junit.xml"
            cobertura coberturaReportFile: '**/coverage.xml', failNoReports: false, failUnstable: false, onlyStable: false
        }
    }
}